{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lassebirk/SemesterProjektFrontend/SYS-Frontend/src/components/Home.js\";\nimport \"../Css-files/home.css\";\nimport React, { useEffect, useState } from 'react';\nexport default function Home() {\n  const baseUrl = \"https://jsonplaceholder.typicode.com/users/\"; // Det endpoint som der bliver hentet fra\n\n  const resultBox = document.getElementById('result');\n\n  const mapMembersToHtml = members => {\n    const html = members.map(({\n      id,\n      name,\n      username,\n      email,\n      address,\n      phone,\n      company\n    }) => `<tr>\n        <td>${id}</td>\n        <td>${name}</td>\n        <td>${username}</td>\n        <td>${email}</td>\n        <td>${address.street}</td>\n        <td>${address.city}</td>\n        <td>${address.zipcode}</td>\n        <td>${phone}</td>\n        <td>${company.name}</td>\n      </tr>`).join('');\n    resultBox.innerHTML = ` <table border= \"2\"> \n                  <thead> \n                      <tr> \n                          <td>Person-ID</td> \n                          <td>Name</td> \n                          <td>Username</td> \n                          <td>Email</td> \n                          <td>Address</td> \n                          <td>City</td> \n                          <td>Zipcode</td> \n                          <td>Phone number</td>\n                          <td>Hobby</td>\n                      </tr> \n                  </thead> \n                  <tbody> \n                      ${html} \n                  </tbody> \n                </table> `;\n  };\n\n  const searchInMembers = query => {\n    if (query.length === 0) {\n      return;\n    } //Matcher basis værdi med den nye værdi, dette gør expansion langt nemmere.\n\n\n    const matchValues = [element => element.name, element => element.phone, element => element.address.street, element => element.address.city, element => element.email];\n    const queryValue = query.toLowerCase();\n    fetch(baseUrl).then(response => response.json()).then(elements => {\n      const filtered = elements.filter(element => {\n        for (let matchValue of matchValues) {\n          const comparableValue = matchValue(element).toLowerCase();\n\n          if (queryValue === comparableValue || comparableValue.includes(queryValue)) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n      mapMembersToHtml(filtered);\n    });\n  };\n\n  document.getElementById('findButton').addEventListener('click', function (event) {\n    event.preventDefault();\n    searchInMembers(document.getElementById('searchField').value);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: [\" Looking for a specific food or destination? Let \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logo\",\n        children: \"TravelEat \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 74\n      }, this), \" help! \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchContainer\",\n          type: \"text\",\n          placeholder: \"Food or Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"searchButton\",\n      type: \"button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\",\n      className: \"returnedResult\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 1\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/lassebirk/SemesterProjektFrontend/SYS-Frontend/src/components/Home.js"],"names":["React","useEffect","useState","Home","baseUrl","resultBox","document","getElementById","mapMembersToHtml","members","html","map","id","name","username","email","address","phone","company","street","city","zipcode","join","innerHTML","searchInMembers","query","length","matchValues","element","queryValue","toLowerCase","fetch","then","response","json","elements","filtered","filter","matchValue","comparableValue","includes","addEventListener","event","preventDefault","value"],"mappings":"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","sourcesContent":["import \"../Css-files/home.css\"\n\nimport React, { useEffect, useState } from 'react';\n\nexport default function Home() {\n\n const baseUrl = \"https://jsonplaceholder.typicode.com/users/\" // Det endpoint som der bliver hentet fra\n  const resultBox = document.getElementById('result'); \n\n\n  const mapMembersToHtml = (members) => {\n    const html = members.map(({id, name, username, email, address, phone, company}) => (\n      `<tr>\n        <td>${id}</td>\n        <td>${name}</td>\n        <td>${username}</td>\n        <td>${email}</td>\n        <td>${address.street}</td>\n        <td>${address.city}</td>\n        <td>${address.zipcode}</td>\n        <td>${phone}</td>\n        <td>${company.name}</td>\n      </tr>`\n    )).join('');\n\n    resultBox.innerHTML = \n            ` <table border= \"2\"> \n                  <thead> \n                      <tr> \n                          <td>Person-ID</td> \n                          <td>Name</td> \n                          <td>Username</td> \n                          <td>Email</td> \n                          <td>Address</td> \n                          <td>City</td> \n                          <td>Zipcode</td> \n                          <td>Phone number</td>\n                          <td>Hobby</td>\n                      </tr> \n                  </thead> \n                  <tbody> \n                      ${html} \n                  </tbody> \n                </table> `; \n  }         \n  \n  const searchInMembers = (query) => {\n    if (query.length === 0) {\n      return\n    }\n//Matcher basis værdi med den nye værdi, dette gør expansion langt nemmere.\n    const matchValues = [\n      (element) => element.name,\n      (element) => element.phone,\n      (element) => element.address.street,\n      (element) => element.address.city,\n      (element) => element.email\n    ]\n\n    const queryValue = query.toLowerCase()\n    fetch(baseUrl)\n      .then(response => response.json())\n      .then(elements => {\n        const filtered = elements.filter(element => {\n          for (let matchValue of matchValues) {\n            const comparableValue = matchValue(element).toLowerCase()\n            if (queryValue === comparableValue || comparableValue.includes(queryValue)) {\n              return true\n            }\n          }\n          return false\n        })\n      mapMembersToHtml(filtered)\n      })\n  } \n  document.getElementById('findButton').addEventListener('click', function(event) {\n      event.preventDefault();\n      searchInMembers(document.getElementById('searchField').value)\n  });\n\n\n\n  \n  return (\n<div>  \n\n  <h1 className=\"title\"> Looking for a specific food or destination? Let <span className=\"logo\">TravelEat </span> help! </h1>\n\n  <div className=\"container\"> \n      <div>    \n        <input className=\"searchContainer\" type=\"text\" placeholder=\"Food or Destination\"></input>\n      </div>\n  </div>\n        <button className=\"searchButton\" type=\"button\">Search</button>\n        <div id=\"result\" className=\"returnedResult\" ></div>\n</div> \n  );\n}\n"]},"metadata":{},"sourceType":"module"}