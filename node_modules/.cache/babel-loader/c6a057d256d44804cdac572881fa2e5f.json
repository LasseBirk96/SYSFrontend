{"ast":null,"code":"import links from \"./settings\";\nconst URL = links.server;\n\nfunction apiFacade() {\n  //............Demo Package..............\\\\\n  const getDemoPack = () => {\n    return fetch(URL + \"/api/info/demoPackage\").then(handleHttpErrors);\n  }; //.........................\\\\\n  //............registerUser..............\\\\\n\n\n  const registerUser = user => {\n    const options = makeOptions(\"POST\", false, { ...user\n    });\n    return fetch(URL + \"/api/user\", options).then(handleHttpErrors);\n  }; //.........................\\\\\n\n\n  const setToken = token => {\n    localStorage.setItem(\"jwtToken\", token);\n  };\n\n  const getToken = () => {\n    return localStorage.getItem(\"jwtToken\");\n  };\n\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n\n  const login = (user, password) => {\n    console.log(URL);\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: password\n    });\n    return fetch(URL + \"/api/login\", options).then(handleHttpErrors).then(res => {\n      setToken(res.token);\n      console.log(res);\n    });\n  };\n\n  const fetchData = url2 => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n\n    return fetch(URL + url2, options).then(handleHttpErrors);\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    };\n\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n\n    return opts;\n  };\n\n  return {\n    makeOptions,\n    setToken,\n    getToken,\n    loggedIn,\n    login,\n    logout,\n    fetchData,\n    getDemoPack,\n    registerUser\n  };\n}\n\nconst facade = apiFacade();\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({\n      status: res.status,\n      fullError: res.json()\n    });\n  }\n\n  return res.json();\n}\n\nexport default facade;","map":{"version":3,"sources":["/Users/lassebirk/SemesterProjektFrontend/SYS-Frontend/src/apiFacade.js"],"names":["links","URL","server","apiFacade","getDemoPack","fetch","then","handleHttpErrors","registerUser","user","options","makeOptions","setToken","token","localStorage","setItem","getToken","getItem","loggedIn","logout","removeItem","login","password","console","log","username","res","fetchData","url2","method","addToken","body","opts","headers","Accept","JSON","stringify","facade","ok","Promise","reject","status","fullError","json"],"mappings":"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","sourcesContent":["import links from \"./settings\";\n\nconst URL = links.server;\n\nfunction apiFacade() {\n  //............Demo Package..............\\\\\n  const getDemoPack = () => {\n    return fetch(URL + \"/api/info/demoPackage\").then(handleHttpErrors);\n  };\n  //.........................\\\\\n\n  //............registerUser..............\\\\\n  const registerUser = (user) => {\n    const options = makeOptions(\"POST\", false, {\n      ...user,\n    });\n    return fetch(URL + \"/api/user\", options).then(handleHttpErrors);\n  };\n  //.........................\\\\\n  const setToken = (token) => {\n    localStorage.setItem(\"jwtToken\", token);\n  };\n  const getToken = () => {\n    return localStorage.getItem(\"jwtToken\");\n  };\n  const loggedIn = () => {\n    const loggedIn = getToken() != null;\n    return loggedIn;\n  };\n  const logout = () => {\n    localStorage.removeItem(\"jwtToken\");\n  };\n\n  const login = (user, password) => {\n    console.log(URL);\n    const options = makeOptions(\"POST\", true, {\n      username: user,\n      password: password,\n    });\n    return fetch(URL + \"/api/login\", options)\n      .then(handleHttpErrors)\n      .then((res) => {\n        setToken(res.token);\n        console.log(res);\n      });\n  };\n\n  const fetchData = (url2) => {\n    const options = makeOptions(\"GET\", true); //True add's the token\n    return fetch(URL + url2, options).then(handleHttpErrors);\n  };\n\n  const makeOptions = (method, addToken, body) => {\n    var opts = {\n      method: method,\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    };\n    if (addToken && loggedIn()) {\n      opts.headers[\"x-access-token\"] = getToken();\n    }\n    if (body) {\n      opts.body = JSON.stringify(body);\n    }\n    return opts;\n  };\n  return {\n    makeOptions,\n    setToken,\n    getToken,\n    loggedIn,\n    login,\n    logout,\n    fetchData,\n    getDemoPack,\n    registerUser,\n  };\n}\nconst facade = apiFacade();\n\nfunction handleHttpErrors(res) {\n  if (!res.ok) {\n    return Promise.reject({ status: res.status, fullError: res.json() });\n  }\n\n  return res.json();\n}\nexport default facade;\n"]},"metadata":{},"sourceType":"module"}