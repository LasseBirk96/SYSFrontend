{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/lassebirk/SemesterProjektFrontend/SYS-Frontend/src/components/MySearchSite.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../Css-files/wrapper.css\";\n\nclass MySearchSite extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      loadingData: true,\n      data: []\n    };\n    this.loadInitialData();\n  }\n\n  async loadInitialData() {\n    const response = await fetch('https://jsonplaceholder.typicode.com/users/');\n    const json = await response.json();\n    this.setState({\n      isLoading: false,\n      data: json\n    });\n  }\n\n  filterByQuery(query) {\n    if (query.length === 0) {\n      return [];\n    }\n\n    const matches = [element => element.name, element => element.email];\n    const queryValue = query.toLowerCase();\n    return this.state.data.filter(element => {\n      for (let match of matches) {\n        const comparableValue = match(element).toLowerCase();\n\n        if (queryValue === comparableValue || comparableValue.includes(queryValue)) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n\n  render() {\n    const {\n      query,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Initializing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this);\n    }\n\n    const filteredData = this.filterByQuery(query);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searcher\",\n          value: query,\n          onChange: event => this.setState({\n            query: event.target.value\n          }),\n          type: \"text\",\n          placeholder: \"Food or destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"table\",\n            children: filteredData.map(entry => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"tableContent\",\n                onClick: () => this.setState({\n                  query: entry.name\n                }),\n                children: entry.name\n              }, entry.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchButton\",\n        type: \"button\",\n        onClick: fetch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"result\",\n        className: \"returnedResult\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MySearchSite;","map":{"version":3,"sources":["/Users/lassebirk/SemesterProjektFrontend/SYS-Frontend/src/components/MySearchSite.js"],"names":["React","ReactDOM","MySearchSite","Component","constructor","props","state","query","loadingData","data","loadInitialData","response","fetch","json","setState","isLoading","filterByQuery","length","matches","element","name","email","queryValue","toLowerCase","filter","match","comparableValue","includes","render","filteredData","event","target","value","map","entry"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"../Css-files/wrapper.css\"\n\n\nclass MySearchSite extends React.Component {\n\n    constructor(props) {\n      super(props)\n      \n      this.state = {\n        query: '',\n        loadingData: true,\n        data: []\n      }\n      \n      this.loadInitialData()\n    }\n    \n    async loadInitialData() {\n      const response = await fetch('https://jsonplaceholder.typicode.com/users/')\n      const json = await response.json()\n      \n      this.setState({ isLoading: false, data: json })\n    }\n    \n    filterByQuery(query) {\n      if (query.length === 0) {\n        return []\n      }\n      \n      const matches = [\n        (element) => element.name,\n        (element) => element.email\n      ]\n      \n      const queryValue = query.toLowerCase()\n      \n      return this.state.data.filter(element => {\n        for (let match of matches) {\n          const comparableValue = match(element).toLowerCase()\n          \n          if (queryValue === comparableValue || comparableValue.includes(queryValue)) {\n            return true\n          }\n        }\n        \n        return false\n      })\n    }\n    \n    render() {\n      const { query, isLoading } = this.state\n      \n      if (isLoading) {\n        return <p>Initializing</p>\n      }\n      \n      const filteredData = this.filterByQuery(query)\n      \n      return (\n        <div className='wrapper'>\n          <div className=\"container\">\n            <input className=\"searcher\" value={query} onChange={ (event) => this.setState({ query: event.target.value }) } type='text' placeholder='Food or destination'/>\n            <div>\n              <ul className=\"table\">\n                { filteredData.map(entry => {\n                  return (\n                    \n                    <li className=\"tableContent\" key={ entry.name } onClick={ () => this.setState({ query: entry.name })}>\n                        { entry.name }\n                    </li>\n                  )\n                }) }\n              </ul>\n            </div>\n          </div>\n          <button className=\"searchButton\" type=\"button\" onClick={fetch} >Search</button>\n        <div id=\"result\" className=\"returnedResult\" ></div>\n        </div>\n      )\n    }\n  }\n\n  export default MySearchSite;"]},"metadata":{},"sourceType":"module"}